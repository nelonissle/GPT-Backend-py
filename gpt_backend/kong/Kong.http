@Kong_GatewayAddress = http://localhost:8000
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkZXZlbG9wZXIiLCJyb2xlIjoiZGV2ZWxvcGVyIiwiaXNzIjoiZGV2ZWxvcGVyIiwiaWF0IjoxNzU0NDgyNjcxLCJleHAiOjE3NTQ3NDE4NzEsImp0aSI6ImQxYzE3ZDQ1LWU4NDktNDg5My05ZjI0LTgwYmJkMzUxN2E5NyJ9.BbJvbhCEpMsyVNHnYykpGKZ760hA90ZzASuzmY8_kOM
@dev_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkZXZlbG9wZXIiLCJyb2xlIjoiZGV2ZWxvcGVyIiwiaXNzIjoiZGV2ZWxvcGVyIiwiaWF0IjoxNzU0NDgyNjcxLCJleHAiOjE3NTQ3NDE4NzEsImp0aSI6ImQxYzE3ZDQ1LWU4NDktNDg5My05ZjI0LTgwYmJkMzUxN2E5NyJ9.BbJvbhCEpMsyVNHnYykpGKZ760hA90ZzASuzmY8_kOM
@chatId = 682df0f5795c27ef0b57086c
@username = testuser10


### Test: Registrierung eines neuen Users über den Kong-Gateway
POST {{Kong_GatewayAddress}}/auth/register HTTP/1.1
Content-Type: application/json

{
  "username": "testuser10",
  "password": "VeryStrongPassword123!@",
  "role": "developer"
}

### Test: Login mit dem neuen User (über den Kong-Gateway)
POST {{Kong_GatewayAddress}}/auth/login HTTP/1.1
Content-Type: application/json

{
  "username": "developer",
  "password": "DeveloperPassword123!"
}

### GET request to get all users
GET {{Kong_GatewayAddress}}/auth/users HTTP/1.1
Authorization: Bearer {{token}}

### 1. Test: Neuen Chat erstellen
POST {{Kong_GatewayAddress}}/chat/new HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "initial_query": "Hallo, dies ist mein erster Testchat"
  
}


### "llm_response": "Dummy-Antwort des LLM."

### → Antwort: {"message":"Neuer Chat erstellt","chat_id":"<SET THIS AS {{chatId}}>"}  

### 2. Test: Nachricht ohne chat_id hinzufügen (schreibt in zuletzt aktive Konversation)
POST {{Kong_GatewayAddress}}/chat/add HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "role": "user",
  "text": "Das ist eine Nachricht im aktiven Chat."
}

### 3. Test: Nachricht mit expliziter chat_id hinzufügen
POST {{Kong_GatewayAddress}}/chat/add HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}

{
  "chat_id": "{{chatId}}",
  "role": "user",
  "text": "Das ist eine Nachricht in einem bestimmten Chat.TEST1"
}

### 4. Test: Liste aller Chats (nur Zusammenfassung, sortiert nach zuletzt benutzt)
GET {{Kong_GatewayAddress}}/chat/history HTTP/1.1
Authorization: Bearer {{token}}

### 5. Test: Einen einzelnen Chat komplett abrufen
GET {{Kong_GatewayAddress}}/chat/{{chatId}} HTTP/1.1
Authorization: Bearer {{token}}


### ─────────────────────────────────────────────────────────────
### Admin‑Service Tests
### ─────────────────────────────────────────────────────────────

### A. Ohne Token: List all users → 401 Unauthorized
GET {{Kong_GatewayAddress}}/admin/users HTTP/1.1

### B. Mit normalem User‑Token: List all users → 403 Forbidden
GET {{Kong_GatewayAddress}}/admin/users HTTP/1.1
Authorization: Bearer {{token}}

### C. Mit Developer‑Token: List all users → 200 OK
GET {{Kong_GatewayAddress}}/admin/users HTTP/1.1
Authorization: Bearer {{dev_token}}

### D. Developer‑Token: List chats of a specific user
GET {{Kong_GatewayAddress}}/admin/users/{{username}}/chats HTTP/1.1
Authorization: Bearer {{dev_token}}

### E. Developer‑Token: Get a specific chat
GET {{Kong_GatewayAddress}}/admin/users/{{username}}/chats/{{chatId}} HTTP/1.1
Authorization: Bearer {{dev_token}}

### F. Developer‑Token: Delete a specific chat
DELETE {{Kong_GatewayAddress}}/admin/users/{{username}}/chats/{{chatId}} HTTP/1.1
Authorization: Bearer {{dev_token}}

### G. Developer‑Token: Confirm deletion (should no longer find that chat)
GET {{Kong_GatewayAddress}}/admin/users/{{username}}/chats HTTP/1.1
Authorization: Bearer {{dev_token}}

### H. Developer‑Token: Delete the user entirely
DELETE {{Kong_GatewayAddress}}/admin/users/{{username}} HTTP/1.1
Authorization: Bearer {{dev_token}}

### I. Developer‑Token: Confirm user deletion (should return 404)
GET {{Kong_GatewayAddress}}/admin/users/{{username}}/chats HTTP/1.1
Authorization: Bearer {{dev_token}}
 
 