apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong-gateway
  template:
    metadata:
      labels:
        app: kong-gateway
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox
          command:
            - sh
            - -c
            - |
              until nc -z -w 2 "$POSTGRES_GPT_SERVICE_HOST" "$POSTGRES_GPT_SERVICE_PORT"; do
                echo waiting for postgres;
                sleep 2;
              done;
        - name: kong-migrations
          image: {{ .Values.migrations.image }}
          command: ["kong", "migrations", "bootstrap"]
          env:
            - name: KONG_DATABASE
              value: "postgres"
            - name: KONG_PG_HOST
              value: "$(POSTGRES_GPT_SERVICE_HOST)"
            - name: KONG_PG_USER
              value: {{ .Values.postgresUser | quote }}
            - name: KONG_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kong-secrets
                  key: KONG_PG_PASSWORD
            - name: KONG_PG_DATABASE
              value: {{ .Values.postgresDB | quote }}
      containers:
        - name: kong
          image: {{ .Values.kong.image }}
          env:
            - name: KONG_DATABASE
              value: "postgres"
            - name: KONG_PG_HOST
              value: "$(POSTGRES_GPT_SERVICE_HOST)"
            - name: KONG_PG_USER
              value: {{ .Values.postgresUser | quote }}
            - name: KONG_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kong-secrets
                  key: KONG_PG_PASSWORD
            - name: KONG_PG_DATABASE
              value: {{ .Values.postgresDB | quote }}
          ports:
            - containerPort: {{ .Values.kong.proxyPort }}
            - containerPort: {{ .Values.kong.adminPort }}
            - containerPort: {{ .Values.kong.proxySSLPort }}
            - containerPort: {{ .Values.kong.adminSSLPort }}
