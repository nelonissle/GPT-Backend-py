apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "loki.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "loki.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "loki.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "loki.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - -config.file=/etc/loki/loki-config.yaml
          ports:
            - name: http
              containerPort: {{ .Values.config.server.httpPort }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.config.server.grpcPort }}
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: data
              mountPath: /loki
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 60
      volumes:
        - name: config
          configMap:
            name: {{ include "loki.fullname" . }}-config
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "loki.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
